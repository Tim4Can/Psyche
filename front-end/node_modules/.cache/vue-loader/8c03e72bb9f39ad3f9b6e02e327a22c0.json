{"remainingRequest":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\src\\views\\warehouse\\WarehouseDetail.vue?vue&type=style&index=0&id=3f7e00de&lang=less&scoped=true&","dependencies":[{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\src\\views\\warehouse\\WarehouseDetail.vue","mtime":1562869728000},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\css-loader\\index.js","mtime":1573722966629},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1573725517685},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1573722998988},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":1573723014394},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573722996621},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1573725517685}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '~ant-design-vue/lib/style/themes/default.less';\n#layout .ant-layout-header {\n  background: #fff;\n  color: #666;\n}\n.button-group {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  .button {\n    margin-right: 5rem;\n    margin-left: 0.5rem;\n  }\n}\n\n.modal {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  .modal-number {\n    margin-left: 0.6rem;\n  }\n}\n",{"version":3,"sources":["WarehouseDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WarehouseDetail.vue","sourceRoot":"src/views/warehouse","sourcesContent":["<template>\n  <page-view title=\"仓库详情\">\n    <a-card>\n      <div id=\"layout\">\n        <!-- warehouse message -->\n        <a-layout>\n          <a-layout-header>您现在位于 {{ warehouseDetail.address }} {{ warehouseDetail.detailAddress }}的 {{ warehouseDetail.name }}</a-layout-header>\n          <!-- warehouse message end -->\n          <a-card :bordered=\"false\">\n            <!-- refresh button -->\n            <div class=\"button-group\">\n              <a-button\n                size=\"large\"\n                class=\"button\"\n                type=\"primary\"\n                @click=\"reload()\"\n                icon=\"reload\"\n              >刷新</a-button>\n            </div>\n            <!-- refresh end -->\n            <!-- equipment table -->\n            <div>\n              <a-form class=\"ant-advanced-search-form\" :form=\"form\">\n                <a-row :gutter=\"24\">\n                  <a-col :md=\"8\" :sm=\"24\">\n                    <a-form-item>\n                      <a-input placeholder=\"请输入器材编号\" v-model=\"equipmentInput\" />\n                    </a-form-item>\n                  </a-col>\n                </a-row>\n              </a-form>\n            </div>\n            <a-table :columns=\"ecol\" :dataSource=\"equipmentShow\" rowKey=\"id\" bordered>\n              <template v-for=\"col in ['id','model', 'type']\" :slot=\"col\" slot-scope=\"text\">\n                <div :key=\"col\">\n                  <div>{{ text }}</div>\n                </div>\n              </template>\n              <template slot=\"operation\" slot-scope=\"text, record\">\n                <div class=\"editable-row-operations\">\n                  <a-button @click=\"() => scheduleEquipment(record.id)\">调度</a-button>\n                  <!-- modal -->\n                  <a-modal title=\"调度\" v-model=\"visibleE\" @ok=\"handleOKE\">\n                    <div class=\"modal\">\n                      调出到\n                      <a-select style=\"width: 200px\" v-model=\"to\">\n                        <a-select-option\n                          v-for=\"(item, index) in allWarehouse\"\n                          :key=\"index\"\n                        >{{ item }}</a-select-option>\n                      </a-select>仓库\n                    </div>\n                  </a-modal>\n                  <!-- modal end -->\n                </div>\n              </template>\n            </a-table>\n            <!-- equipment table end -->\n\n            <!-- accessory table -->\n            <div>\n              <a-form class=\"ant-advanced-search-form\" :form=\"form\">\n                <a-row :gutter=\"24\">\n                  <a-col :md=\"8\" :sm=\"24\">\n                    <a-form-item>\n                      <a-input placeholder=\"请输入配件编号\" v-model=\"accessoryInput\" />\n                    </a-form-item>\n                  </a-col>\n                </a-row>\n              </a-form>\n            </div>\n            <a-table :columns=\"acol\" :dataSource=\"accessoryShow\" rowKey=\"id\" bordered>\n              <template\n                v-for=\"col in ['id','model', 'type', 'number']\"\n                :slot=\"col\"\n                slot-scope=\"text\"\n              >\n                <div :key=\"col\">\n                  <div>{{ text }}</div>\n                </div>\n              </template>\n              <template slot=\"operation\" slot-scope=\"text, record\">\n                <div class=\"editable-row-operations\">\n                  <a-button @click=\"() => scheduleAccessory(record.id)\">调度</a-button>\n                  <!-- modal -->\n                  <a-modal title=\"调度\" v-model=\"visibleA\" @ok=\"handleOKA\">\n                    <div class=\"modal\">\n                      调出到\n                      <a-select style=\"width: 200px\" v-model=\"to\">\n                        <a-select-option\n                          v-for=\"(item, index) in allWarehouse\"\n                          :key=\"index\"\n                        >{{ item }}</a-select-option>\n                      </a-select>仓库\n                    </div>\n                    <div class=\"modal\">\n                      数量:\n                      <a-input-number\n                        :max=\"max\"\n                        :min=\"min\"\n                        class=\"modal-number\"\n                        v-model=\"scheduleA.num\"\n                      />\n                    </div>\n                  </a-modal>\n                  <!-- modal end -->\n                </div>\n              </template>\n            </a-table>\n            <!-- accessory table end -->\n          </a-card>\n        </a-layout>\n      </div>\n    </a-card>\n  </page-view>\n</template>\n\n<script>\nimport { postWarehouseDetail, postAllWarehouse, postGoods, postSchedule } from '@/api/warehouse'\nimport { PageView } from '@/layouts'\nimport Fuse from 'fuse.js'\n\nexport default {\n  inject: ['reload'],\n  name: 'Detail',\n  components: {\n    PageView\n  },\n  data() {\n    return {\n      // form and columns names\n      form: this.$form.createForm(this),\n      acol: [\n        {\n          title: '编号',\n          dataIndex: 'id',\n          align: 'center',\n          width: '30%',\n          sorter: (a, b) => a.model > b.model,\n          scopedSlots: { customRender: 'model' }\n        },\n        {\n          title: '型号',\n          dataIndex: 'model',\n          align: 'center',\n          sorter: (a, b) => a.model > b.model,\n          scopedSlots: { customRender: 'model' }\n        },\n        {\n          title: '数量',\n          dataIndex: 'number',\n          align: 'center',\n          width: '20%',\n          sorter: (a, b) => a.number - b.number,\n          scopedSlots: { customRender: 'number' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'operation',\n          align: 'center',\n          width: '20%',\n          scopedSlots: { customRender: 'operation' }\n        }\n      ],\n      ecol: [\n        {\n          title: '编号',\n          dataIndex: 'id',\n          align: 'center',\n          width: '30%',\n          sorter: (a, b) => a.id > b.id,\n          scopedSlots: { customRender: 'id' }\n        },\n        {\n          title: '型号',\n          dataIndex: 'model',\n          align: 'center',\n          sorter: (a, b) => a.model > b.model,\n          scopedSlots: { customRender: 'model' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'operation',\n          align: 'center',\n          width: '20%',\n          scopedSlots: { customRender: 'operation' }\n        }\n      ],\n\n      // data\n      // origin data\n      accessory: [],\n      equipment: [],\n      // show data\n      accessoryShow: [],\n      equipmentShow: [],\n      // input data, search by key\n      accessoryInput: '',\n      equipmentInput: '',\n      // the ID of this warehouse\n      warehouseID: this.$route.params.id,\n      // detail data of this warehouse\n      warehouseDetail: {\n        name: '',\n        address: '',\n        detailAddress: ''\n      },\n      // show modal\n      visibleA: false,\n      visibleE: false,\n      // max and min of number to be scheduled\n      max: 0,\n      min: 1,\n      // the data of all warehouse\n      allWarehouse: [],\n      // the index of \"to\" warehouse\n      to: 0,\n      // 2 schedules\n      scheduleA: {\n        type: 'Accessory',\n        id: String,\n        model: String,\n        from: String,\n        // the name of \"to\" warehouse\n        to: String,\n        num: 1\n      },\n      scheduleE: {\n        type: 'Equipment',\n        id: String,\n        from: String,\n        // the name of \"to\" warehouse\n        to: String\n      }\n    }\n  },\n  // watch for fuzzy search\n  watch: {\n    accessoryInput(pattern) {\n      if (pattern == '') {\n        this.accessoryShow = this.accessory\n      } else {\n        const option = {\n          keys: ['id'],\n          threshold: 0.1\n        }\n        var fuse = new Fuse(this.accessory, option)\n        this.accessoryShow = fuse.search(pattern)\n      }\n    },\n    equipmentInput(pattern) {\n      if (pattern == '') {\n        this.equipmentShow = this.equipment\n      } else {\n        const option = {\n          keys: ['id'],\n          threshold: 0.1\n        }\n        var fuse = new Fuse(this.equipment, option)\n        this.equipmentShow = fuse.search(pattern)\n      }\n    }\n  },\n  methods: {\n    // schedule for equipment\n    scheduleEquipment(id) {\n      const newData = [...this.equipment]\n      const target = newData.filter(item => id === item.id)[0]\n      this.max = target.number\n      this.visibleE = true\n\n      this.scheduleE.id = target.id\n      this.scheduleE.from = this.warehouseDetail.name\n    },\n    // schedule for accessory\n    scheduleAccessory(id) {\n      const newData = [...this.accessory]\n      const target = newData.filter(item => id === item.id)[0]\n      this.max = target.number\n      this.visibleA = true\n\n      if (typeof this.scheduleA.num !== 'number') {\n        this.$notification.open({\n          message: '添加失败',\n          description: '请输入合法的数字',\n          icon: <a-icon type=\"exclamation-circle\" style=\"color: #108ee9\" />\n        })\n        return\n      }\n\n      this.scheduleA.model = target.model\n      this.scheduleA.id = target.id\n      this.scheduleA.from = this.warehouseDetail.name\n    },\n    // event after click ok\n    handleOKE(e) {\n      // the \"to\" in json schedule need to be changed from index to string\n      this.scheduleE.to = this.allWarehouse[this.to]\n      postSchedule([this.scheduleE])\n        .then(response => {\n          this.equipment = [...response.data]\n          this.equipmentShow = this.equipment\n          this.$notification.open({\n            message: '调度成功!',\n            description: '请继续你的操作',\n            icon: <a-icon type=\"exclamation-circle\" style=\"color: blue\" />\n          })\n        })\n        .catch(err => {\n          this.$notification.open({\n            message: '添加失败',\n            description: '请查看控制台信息',\n            icon: <a-icon type=\"exclamation-circle\" style=\"color: blue\" />\n          })\n          console.log(err)\n        })\n      this.visibleE = false\n    },\n    handleOKA(e) {\n      // the \"to\" in json schedule need to be changed from index to string\n      this.scheduleA.to = this.allWarehouse[this.to]\n      postSchedule([this.scheduleA])\n        .then(response => {\n          this.accessory = [...response.data]\n          this.accessoryShow = this.accessory\n          this.$notification.open({\n            message: '调度成功!',\n            description: '请继续你的操作',\n            icon: <a-icon type=\"exclamation-circle\" style=\"color: #108ee9\" />\n          })\n        })\n        .catch(err => {\n          this.$notification.open({\n            message: '添加失败',\n            description: '请查看控制台信息',\n            icon: <a-icon type=\"exclamation-circle\" style=\"color: #108ee9\" />\n          })\n          console.log(err)\n        })\n      this.visibleA = false\n    }\n  },\n  created() {\n    // get detail info of warehouse\n    postWarehouseDetail({ id: this.warehouseID })\n      .then(response => {\n        this.warehouseDetail.name = response.data.name\n        this.warehouseDetail.address = response.data.address\n        this.warehouseDetail.detailAddress = response.data.detailAddress\n      })\n      .catch(err => {\n        this.$notification.open({\n          message: '获取仓库详情失败',\n          description: '请查看控制台信息',\n          icon: <a-icon type=\"exclamation-circle\" style=\"color: #108ee9\" />\n        })\n        console.log(err)\n      })\n    // get info of goods\n    postAllWarehouse({ id: this.warehouseID })\n      .then(response => {\n        this.allWarehouse = [...response.data]\n      })\n      .catch(err => {\n        this.$notification.open({\n          message: '获取仓库列表失败',\n          description: '请查看控制台信息',\n          icon: <a-icon type=\"exclamation-circle\" style=\"color: #108ee9\" />\n        })\n        console.log(err)\n      })\n    postGoods({ id: this.warehouseID })\n      .then(response => {\n        this.equipment = [...response.data.equipment]\n        this.equipmentShow = this.equipment\n        this.accessory = [...response.data.accessory]\n        this.accessoryShow = this.accessory\n      })\n      .catch(err => {\n        this.$notification.open({\n          message: '获取物品信息失败',\n          description: '请查看控制台信息',\n          icon: <a-icon type=\"exclamation-circle\" style=\"color: #108ee9\" />\n        })\n        console.log(err)\n      })\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import '~ant-design-vue/lib/style/themes/default.less';\n#layout .ant-layout-header {\n  background: #fff;\n  color: #666;\n}\n.button-group {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  .button {\n    margin-right: 5rem;\n    margin-left: 0.5rem;\n  }\n}\n\n.modal {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  .modal-number {\n    margin-left: 0.6rem;\n  }\n}\n</style>\n"]}]}