{"remainingRequest":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\src\\views\\equipment\\EquipmentPreview.vue?vue&type=style&index=0&id=05557616&lang=less&scoped=true&","dependencies":[{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\src\\views\\equipment\\EquipmentPreview.vue","mtime":1562869728000},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\css-loader\\index.js","mtime":1573722966629},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1573725517685},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1573722998988},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\less-loader\\dist\\cjs.js","mtime":1573723014394},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573722996621},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1573725517685}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '~ant-design-vue/lib/style/themes/default.less';\n.button-group {\n  margin-bottom: 1rem;\n  .button {\n    margin-left: 0.5rem;\n    margin-left: 0.5rem;\n  }\n}\n.ant-form-inline .ant-form-item {\n  display: inline-block;\n  margin-right: 0;\n}\n",{"version":3,"sources":["EquipmentPreview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EquipmentPreview.vue","sourceRoot":"src/views/equipment","sourcesContent":["<template>\n  <page-view title=\"仓储器材\">\n    <div>\n      <a-card :bordered=\"false\">\n        <a-form class=\"ant-advanced-search-form\" :form=\"form\" inline>\n          <a-row :gutter=\"24\">\n            <a-col :md=\"6\" :sm=\"24\">\n              <a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"器材编号：\">\n                <a-input placeholder=\"请输入器材编号\" v-model=\"inputID\" />\n              </a-form-item>\n            </a-col>\n            <a-col :md=\"6\" :sm=\"24\">\n              <a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"出厂时间：\">\n                <a-input placeholder=\"请输入出厂时间\" v-model=\"inputTime\" />\n              </a-form-item>\n            </a-col>\n            <a-col style=\"text-align: right\">\n              <a-button style=\"margin-right: 1rem\" @click=\"reload()\" type=\"primary\" icon=\"reload\">刷新</a-button>\n              <a-button @click=\"addEquipment\" type=\"primary\" icon=\"plus\">添加器材</a-button>\n            </a-col>\n          </a-row>\n        </a-form>\n        <br />\n        <a-table :columns=\"columns\" :dataSource=\"eDataShow\" rowKey=\"id\" bordered>\n          <template v-for=\"col in ['id']\" :slot=\"col\" slot-scope=\"text\">{{text}}</template>\n          <template slot=\"status\" slot-scope=\"text\">\n            <a-badge :status=\"text | statusTypeFilter\" :text=\"text | statusFilter\" />\n          </template>\n          <template slot=\"price\" slot-scope=\"text\">{{\"￥\" + text}}</template>\n          <template slot=\"icon\" slot-scope=\"text\">\n            <div id=\"app\">\n              <div class>\n                <div class=\"pic\" @click=\"() => showImg(text)\">\n                  <a-avatar :src=\"text\" />\n                </div>\n              </div>\n              <vue-easy-lightbox :visible=\"visible\" :imgs=\"src\" @hide=\"handleHide\"></vue-easy-lightbox>\n            </div>\n          </template>\n        </a-table>\n        <a-modal v-model=\"showAddForm\" footer>\n          <a-form title=\"添加器材\" @submit=\"handleSubmit\" :form=\"form\">\n            <a-form-item :wrapperCol=\"{ span: 24 }\" style=\"text-align: center\">\n              <h3>新建器材</h3>\n            </a-form-item>\n            <a-form-item\n              label=\"名称\"\n              :labelCol=\"{lg: {span: 7}, sm: {span: 7}}\"\n              :wrapperCol=\"{lg: {span: 10}, sm: {span: 17} }\"\n            >\n              <a-select\n                v-decorator=\"[\n          'name',\n          {rules: [{ required: true, message: '请选择器材名称' }]}\n        ]\"\n                placeholder=\"请选择器材名称\"\n              >\n                <a-select-option\n                  v-for=\"(item,index) in this.allEquipType\"\n                  :key=\"index\"\n                  :value=\"item\"\n                >{{item}}</a-select-option>\n              </a-select>\n            </a-form-item>\n            <a-form-item\n              label=\"出厂日期\"\n              :labelCol=\"{lg: {span: 7}, sm: {span: 7}}\"\n              :wrapperCol=\"{lg: {span: 10}, sm: {span: 17} }\"\n            >\n              <a-date-picker\n                name=\"productTime\"\n                style=\"width: 100%\"\n                format=\"YYYY.MM.DD\"\n                v-decorator=\"[\n            'productTime',\n            {rules: [{ required: true, message: '请选择出厂日期' }]}\n          ]\"\n              />\n            </a-form-item>\n            <a-form-item\n              label=\"器材型号\"\n              :labelCol=\"{lg: {span: 7}, sm: {span: 7}}\"\n              :wrapperCol=\"{lg: {span: 10}, sm: {span: 17} }\"\n            >\n              <a-input\n                v-decorator=\"[\n            'model',\n            {rules: [{ required: true, message: '请输入器材型号' }]}\n          ]\"\n                name=\"model\"\n                placeholder=\"输入器材型号\"\n              />\n            </a-form-item>\n            <a-form-item\n              label=\"仓库\"\n              :labelCol=\"{lg: {span: 7}, sm: {span: 7}}\"\n              :wrapperCol=\"{lg: {span: 10}, sm: {span: 17} }\"\n            >\n              <a-select\n                v-decorator=\"[\n          'warehouse',\n          {rules: [{ required: true, message: '请选择所属仓库' }]}\n        ]\"\n                placeholder=\"请选择所属仓库\"\n              >\n                <a-select-option\n                  v-for=\"(item,index) in this.allWarehouse\"\n                  :key=\"index\"\n                  :value=\"item\"\n                >{{item}}</a-select-option>\n              </a-select>\n            </a-form-item>\n\n            <a-form-item :wrapperCol=\"{ span: 24 }\" style=\"text-align: center\">\n              <a-button htmlType=\"submit\" type=\"primary\">提交</a-button>\n              <a-button style=\"margin-left: 8px\" @click=\"cancelAddForm\">取消</a-button>\n            </a-form-item>\n          </a-form>\n        </a-modal>\n      </a-card>\n    </div>\n  </page-view>\n</template>\n\n<script>\nimport { getEquipmentStoredList, getAllEquipmentType, addEquipmentStored } from '@/api/equipment'\nimport { getWarehouseName } from '@/api/accessory'\nimport { PageView } from '@/layouts'\nimport Fuse from 'fuse.js'\nimport Vue from 'vue'\nimport Lightbox from 'vue-easy-lightbox'\nimport moment from 'moment'\nimport ACol from 'ant-design-vue/es/grid/Col'\nVue.use(Lightbox)\n\nfunction showDate(time) {\n  var Times = new Array()\n  Times = time.split(' ')\n  date = Times[0]\n  for (i = 0; i < date.length; i++) {\n    if (date[i] === '-') {\n      date[i] = '.'\n    }\n  }\n}\nconst statusMap = {\n  0: {\n    status: 'success',\n    text: '全新'\n  },\n  1: {\n    status: 'error',\n    text: '报废'\n  }\n}\nconst columns = [\n  {\n    title: '器材编号',\n    dataIndex: 'id',\n    align: 'center',\n    width: '12%',\n    scopedSlots: { customRender: 'id' },\n    sorter: (a, b) => parseInt(a.id.toString().slice(2)) - parseInt(b.id.toString().slice(2))\n  },\n  {\n    title: '名称',\n    dataIndex: 'name',\n    align: 'center',\n    width: '10%',\n    scopedSlots: { customRender: 'name' }\n  },\n  {\n    title: '图标',\n    dataIndex: 'icon',\n    align: 'center',\n    width: '7%',\n    scopedSlots: { customRender: 'icon' }\n  },\n  {\n    title: '出厂时间',\n    dataIndex: 'productTime',\n    align: 'center',\n    width: '18%',\n    scopedSlots: { customRender: 'productTime' },\n    sorter: (a, b) => a.productTime > b.productTime\n  },\n  {\n    title: '状态',\n    dataIndex: 'status',\n    align: 'center',\n    width: '12%',\n    filters: [\n      {\n        text: '全新',\n        value: '0'\n      },\n      {\n        text: '报废',\n        value: '1'\n      }\n    ],\n    onFilter: (value, record) => record.status.indexOf(value) === 0,\n    scopedSlots: { customRender: 'status' }\n  },\n  {\n    title: '型号编号',\n    dataIndex: 'model',\n    align: 'center',\n    width: '12%',\n    scopedSlots: { customRender: 'model' }\n  },\n  {\n    title: '价格',\n    dataIndex: 'price',\n    align: 'center',\n    width: '8%',\n    scopedSlots: { customRender: 'price' },\n    sorter: (a, b) => a.price - b.price\n  },\n  {\n    title: '所在仓库',\n    dataIndex: 'warehouse',\n    align: 'center',\n    width: '14%',\n    scopedSlots: { customRender: 'storehouse' },\n    filters: [],\n    onFilter: (value, record) => record.warehouse.indexOf(value) === 0\n  }\n]\n// data\nlet inputID = ''\nconst eData = []\nconst eDataShow = []\nexport default {\n  inject: ['reload'],\n  name: 'EquipPreview',\n  components: {\n    ACol,\n    PageView\n  },\n  data() {\n    this.cacheData = eData.map(item => ({ ...item }))\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 15 }\n      },\n      equipmentData: {\n        id: '',\n        name: '',\n        productTime: '',\n        status: '',\n        model: '',\n        price: '',\n        count: '',\n        warehouse: ''\n      },\n      allWarehouse: [],\n      allEquipType: [],\n      visible: false,\n      visible2: false,\n      src: '',\n      eData,\n      columns,\n      eDataShow,\n      inputID: '',\n      inputTime: '',\n      advanced: false,\n      form: this.$form.createForm(this),\n      showAddForm: false,\n      newFormCount: 0,\n      newFormWarehouse: ''\n    }\n  },\n  computed: {\n    emptyInput() {\n      if (\n        this.equipmentData.id !== '' ||\n        this.equipmentData.name !== '' ||\n        this.equipmentData.model !== '' ||\n        this.equipmentData.price !== '' ||\n        this.equipmentData.count !== '' ||\n        this.equipmentData.warehouse !== ''\n      ) {\n        return false\n      } else {\n        return true\n      }\n    }\n  },\n  // watch for fuzzy search\n  methods: {\n    moment,\n    onClickClearSelect() {\n      this.equipmentData.id = ''\n      this.equipmentData.name = ''\n      this.equipmentData.model = ''\n      this.equipmentData.price = ''\n      this.equipmentData.count = ''\n      this.equipmentData.warehouse = ''\n    },\n    onClickSubmit() {\n      this.onClickClearSelect()\n    },\n    handleChange(value, key, column) {\n      const newData = [...this.eData]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target[column] = value\n        this.eData = newData\n      }\n    },\n    edit(key) {\n      const newData = [...this.eData]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        target.editable = true\n        this.eData = newData\n      }\n    },\n    save(key) {\n      const newData = [...this.eData]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        delete target.editable\n        this.eData = newData\n        this.cacheData = newData.map(item => ({ ...item }))\n      }\n    },\n    cancel(key) {\n      const newData = [...this.eData]\n      const target = newData.filter(item => key === item.key)[0]\n      if (target) {\n        Object.assign(target, this.cacheData.filter(item => key === item.key)[0])\n        delete target.editable\n        this.eData = newData\n      }\n    },\n    toggleAdvanced() {\n      this.advanced = !this.advanced\n    },\n    addEquipment() {\n      this.showAddForm = true\n    },\n    handleSubmit(e) {\n      e.preventDefault()\n      this.form.validateFields((err, value) => {\n        if (!err) {\n          value['productTime'] = value['productTime'].format('YYYY.MM.DD')\n          addEquipmentStored(value)\n            .then(response => {\n              this.eData = [...response.data]\n              this.eDataShow = this.eData\n              this.$notification.open({\n                message: '添加成功',\n                description: '请继续您的操作',\n                icon: <a-icon type=\"exclamation-circle\" style=\"color: blue\" />\n              })\n            })\n            .catch(err => {\n              this.$notification.open({\n                message: '添加失败',\n                description: '请查看控制台信息',\n                icon: <a-icon type=\"exclamation-circle\" style=\"color: #108ee9\" />\n              })\n              console.log(err)\n            })\n        }\n      })\n      this.showAddForm = false\n    },\n    cancelAddForm() {\n      this.showAddForm = false\n    },\n    showImg(text) {\n      this.visible = true\n      this.src = text\n    },\n    handleHide() {\n      this.visible = false\n    }\n  },\n  filters: {\n    statusFilter(type) {\n      return statusMap[type].text\n    },\n    statusTypeFilter(type) {\n      return statusMap[type].status\n    }\n  },\n  watch: {\n    inputID(pattern) {\n      if (pattern == '') {\n        this.eDataShow = this.eData\n      } else {\n        const option = {\n          keys: ['id'],\n          threshold: 0.1\n        }\n        var fuse = new Fuse(this.eData, option)\n        this.eDataShow = fuse.search(pattern)\n      }\n    },\n    inputTime(pattern) {\n      if (pattern == '') {\n        this.eDataShow = this.eData\n      } else {\n        const option = {\n          keys: ['productTime'],\n          threshold: 0.1\n        }\n        var fuse = new Fuse(this.eData, option)\n        this.eDataShow = fuse.search(pattern)\n      }\n    }\n  },\n  mounted() {\n    getEquipmentStoredList().then(response => {\n      this.eData = [...response.data]\n      this.eDataShow = this.eData\n    }),\n      getWarehouseName().then(response => {\n        this.allWarehouse = [...response.data]\n        this.columns[7].filters = []\n        for (let val of this.allWarehouse) {\n          let temp = {\n            text: val,\n            value: val\n          }\n          this.columns[7].filters.push(temp)\n        }\n      }),\n      getAllEquipmentType().then(response => {\n        this.allEquipType = [...response.data]\n      })\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import '~ant-design-vue/lib/style/themes/default.less';\n.button-group {\n  margin-bottom: 1rem;\n  .button {\n    margin-left: 0.5rem;\n    margin-left: 0.5rem;\n  }\n}\n.ant-form-inline .ant-form-item {\n  display: inline-block;\n  margin-right: 0;\n}\n</style>"]}]}