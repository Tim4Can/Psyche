{"remainingRequest":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\babel-loader\\lib\\index.js!D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\src\\views\\warehouse\\WarehousePreview.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\src\\views\\warehouse\\WarehousePreview.vue","mtime":1562869728000},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573722996621},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1573725483614},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573722996621},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1573725517685}],"contextDependencies":[],"result":["import _getIterator from \"D:\\\\Documents\\\\GitHub\\\\Psyche\\\\front-end\\\\db-front\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport _toConsumableArray from \"D:\\\\Documents\\\\GitHub\\\\Psyche\\\\front-end\\\\db-front\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getWarehousePreview, getAllAddress } from '@/api/warehouse';\nimport { PageView } from '@/layouts';\nimport Fuse from 'fuse.js';\nexport default {\n  inject: ['reload'],\n  name: 'Preview',\n  components: {\n    PageView: PageView\n  },\n  data: function data() {\n    return {\n      // form\n      form: this.$form.createForm(this),\n      columns: [{\n        title: '编号',\n        dataIndex: 'id',\n        align: 'center',\n        width: '15%',\n        scopedSlots: {\n          customRender: 'id'\n        },\n        sorter: function sorter(a, b) {\n          return a.id > b.id;\n        }\n      }, {\n        title: '名称',\n        dataIndex: 'name',\n        align: 'center',\n        width: '15%',\n        scopedSlots: {\n          customRender: 'name'\n        },\n        sorter: function sorter(a, b) {\n          return a.id > b.id;\n        }\n      }, {\n        title: '地址',\n        dataIndex: 'address',\n        align: 'center',\n        width: '40%',\n        scopedSlots: {\n          customRender: 'address'\n        },\n        filters: [],\n        onFilter: function onFilter(value, record) {\n          return record.address.indexOf(value) === 0;\n        }\n      }, {\n        title: '操作',\n        align: 'center',\n        dataIndex: 'operation',\n        scopedSlots: {\n          customRender: 'operation'\n        }\n      }],\n      // data\n      input: '',\n      previewData: [],\n      previewDataShow: [],\n      allAddress: []\n    };\n  },\n  // watch for fuzzy search\n  watch: {\n    input: function input(pattern) {\n      if (pattern == '') {\n        this.previewDataShow = this.previewData;\n      } else {\n        var option = {\n          keys: ['id'],\n          threshold: 0.1\n        };\n        var fuse = new Fuse(this.previewData, option);\n        this.previewDataShow = fuse.search(pattern);\n      }\n    }\n  },\n  computed: {\n    emptyInput: function emptyInput() {\n      if (this.input !== '') {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  methods: {\n    // clear all input\n    onClickClearSelect: function onClickClearSelect() {\n      this.input = '';\n    },\n    // submit\n    onClickRefresh: function onClickRefresh() {\n      this.onClickClearSelect();\n      this.reload();\n    },\n    getID: function getID(id) {\n      var newData = _toConsumableArray(this.previewDataShow);\n\n      var target = newData.filter(function (item) {\n        return id === item.id;\n      })[0];\n      return target.id;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    var h = this.$createElement;\n    getWarehousePreview().then(function (response) {\n      _this.previewData = _toConsumableArray(response.data);\n      _this.previewDataShow = _this.previewData;\n    }).catch(function (err) {\n      _this.$notification.open({\n        message: '获取仓库预览信息失败',\n        description: '请查看控制台信息',\n        icon: h(\"a-icon\", {\n          \"attrs\": {\n            \"type\": \"exclamation-circle\"\n          },\n          \"style\": \"color: #108ee9\"\n        })\n      });\n\n      console.log('');\n    });\n    getAllAddress().then(function (response) {\n      _this.allAddress = _toConsumableArray(response.data);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(_this.allAddress), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var val = _step.value;\n          var temp = {\n            text: val,\n            value: val\n          };\n\n          _this.columns[2].filters.push(temp);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }).catch(function (err) {\n      _this.$notification.open({\n        message: '获取地址列表信息失败',\n        description: '请查看控制台信息',\n        icon: h(\"a-icon\", {\n          \"attrs\": {\n            \"type\": \"exclamation-circle\"\n          },\n          \"style\": \"color: #108ee9\"\n        })\n      });\n\n      console.log(err);\n    });\n  }\n};",{"version":3,"sources":["WarehousePreview.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <page-view title=\"仓库预览\">\n    <div id=\"layout\">\n      <a-layout>\n        <a-card>\n          <!-- input bar -->\n          <div>\n            <a-form class=\"ant-advanced-search-form\" :form=\"form\">\n              <a-row :gutter=\"24\">\n                <a-col :md=\"8\" :sm=\"24\">\n                  <a-form-item label=\"编号\">\n                    <a-input placeholder=\"请输入查询编号\" v-model=\"input\" />\n                  </a-form-item>\n                </a-col>\n                <a-col :span=\"24\" :style=\"{ textAlign: 'right' }\">\n                  <div class=\"button-group\">\n                    <a-button\n                      size=\"large\"\n                      class=\"button\"\n                      type=\"primary\"\n                      @click=\"onClickRefresh\"\n                      icon=\"reload\"\n                    >刷新</a-button>\n                    <a-button\n                      size=\"large\"\n                      class=\"button\"\n                      type=\"danger\"\n                      @click=\"onClickClearSelect\"\n                      :disabled=\"emptyInput\"\n                      ghost\n                    >重置</a-button>\n                  </div>\n                </a-col>\n              </a-row>\n            </a-form>\n          </div>\n          <!-- input bar end -->\n          <!-- table -->\n          <a-table :columns=\"columns\" :dataSource=\"previewDataShow\" rowKey=\"id\" bordered>\n            <template v-for=\"col in ['id', 'name', 'address']\" slot=\"col\" slot-scope=\"text\">\n              <div :key=\"col\">{{ text }}</div>\n            </template>\n            <template slot=\"operation\" slot-scope=\"text, record\">\n              <div class=\"editable-row-operations\">\n                <router-link :to=\"{ name: 'Detail', params:{ id: getID(record.id)} }\">转到仓库详情页</router-link>\n              </div>\n            </template>\n          </a-table>\n        </a-card>\n        <!-- table end -->\n      </a-layout>\n    </div>\n  </page-view>\n</template>\n\n<script>\nimport { getWarehousePreview, getAllAddress } from '@/api/warehouse'\nimport { PageView } from '@/layouts'\nimport Fuse from 'fuse.js'\n\nexport default {\n  inject: ['reload'],\n  name: 'Preview',\n  components: {\n    PageView\n  },\n  data() {\n    return {\n      // form\n      form: this.$form.createForm(this),\n      columns: [\n        {\n          title: '编号',\n          dataIndex: 'id',\n          align: 'center',\n          width: '15%',\n          scopedSlots: { customRender: 'id' },\n          sorter: (a, b) => a.id > b.id\n        },\n        {\n          title: '名称',\n          dataIndex: 'name',\n          align: 'center',\n          width: '15%',\n          scopedSlots: { customRender: 'name' },\n          sorter: (a, b) => a.id > b.id\n        },\n        {\n          title: '地址',\n          dataIndex: 'address',\n          align: 'center',\n          width: '40%',\n          scopedSlots: { customRender: 'address' },\n          filters: [],\n          onFilter: (value, record) => record.address.indexOf(value) === 0\n        },\n        {\n          title: '操作',\n          align: 'center',\n          dataIndex: 'operation',\n          scopedSlots: { customRender: 'operation' }\n        }\n      ],\n\n      // data\n      input: '',\n      previewData: [],\n      previewDataShow: [],\n      allAddress: []\n    }\n  },\n  // watch for fuzzy search\n  watch: {\n    input(pattern) {\n      if (pattern == '') {\n        this.previewDataShow = this.previewData\n      } else {\n        const option = {\n          keys: ['id'],\n          threshold: 0.1\n        }\n        var fuse = new Fuse(this.previewData, option)\n        this.previewDataShow = fuse.search(pattern)\n      }\n    }\n  },\n  computed: {\n    emptyInput() {\n      if (this.input !== '') {\n        return false\n      } else {\n        return true\n      }\n    }\n  },\n  methods: {\n    // clear all input\n    onClickClearSelect() {\n      this.input = ''\n    },\n    // submit\n    onClickRefresh() {\n      this.onClickClearSelect()\n      this.reload()\n    },\n    getID(id) {\n      const newData = [...this.previewDataShow]\n      const target = newData.filter(item => id === item.id)[0]\n      return target.id\n    }\n  },\n  created() {\n    getWarehousePreview()\n      .then(response => {\n        this.previewData = [...response.data]\n        this.previewDataShow = this.previewData\n      })\n      .catch(err => {\n        this.$notification.open({\n          message: '获取仓库预览信息失败',\n          description: '请查看控制台信息',\n          icon: <a-icon type=\"exclamation-circle\" style=\"color: #108ee9\" />\n        })\n        console.log('')\n      })\n    getAllAddress()\n      .then(response => {\n        this.allAddress = [...response.data]\n        for (let val of this.allAddress) {\n          let temp = {\n            text: val,\n            value: val\n          }\n          this.columns[2].filters.push(temp)\n        }\n      })\n      .catch(err => {\n        this.$notification.open({\n          message: '获取地址列表信息失败',\n          description: '请查看控制台信息',\n          icon: <a-icon type=\"exclamation-circle\" style=\"color: #108ee9\" />\n        })\n        console.log(err)\n      })\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import '~ant-design-vue/lib/style/themes/default.less';\n#layout .ant-layout-header {\n  background: #fff;\n  color: #666;\n}\n.button-group {\n  margin-bottom: 1rem;\n  .button {\n    margin-right: 0.5rem;\n    margin-left: 0.5rem;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/warehouse"}]}