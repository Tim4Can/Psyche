{"remainingRequest":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\babel-loader\\lib\\index.js!D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\src\\store\\modules\\permission.js","dependencies":[{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\src\\store\\modules\\permission.js","mtime":1562869728000},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573722996621},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1573725483614}],"contextDependencies":[],"result":["import _Promise from \"D:\\\\Documents\\\\GitHub\\\\Psyche\\\\front-end\\\\db-front\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport { asyncRouterMap, constantRouterMap } from '@/config/router.config';\n/**\n * 过滤账户是否拥有某一个权限，并将菜单从加载列表移除\n *\n * @param permission\n * @param route\n * @returns {boolean}\n */\n\nfunction hasPermission(permission, route) {\n  if (route.meta && route.meta.permission) {\n    var flag = false;\n\n    for (var i = 0, len = permission.length; i < len; i++) {\n      flag = route.meta.permission.includes(permission[i]);\n\n      if (flag) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return true;\n}\n/**\n * 单账户多角色时，使用该方法可过滤角色不存在的菜单\n *\n * @param roles\n * @param route\n * @returns {*}\n */\n// eslint-disable-next-line\n\n\nfunction hasRole(roles, route) {\n  if (route.meta && route.meta.roles) {\n    return route.meta.roles.includes(roles.id);\n  } else {\n    return true;\n  }\n}\n\nfunction filterAsyncRouter(routerMap, roles) {\n  var accessedRouters = routerMap.filter(function (route) {\n    if (hasPermission(roles.permissionList, route)) {\n      if (route.children && route.children.length) {\n        route.children = filterAsyncRouter(route.children, roles);\n      }\n\n      return true;\n    }\n\n    return false;\n  });\n  return accessedRouters;\n}\n\nvar permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: []\n  },\n  mutations: {\n    SET_ROUTERS: function SET_ROUTERS(state, routers) {\n      state.addRouters = routers;\n      state.routers = constantRouterMap.concat(routers);\n    }\n  },\n  actions: {\n    GenerateRoutes: function GenerateRoutes(_ref, data) {\n      var commit = _ref.commit;\n      return new _Promise(function (resolve) {\n        var roles = data.roles;\n        var accessedRouters = filterAsyncRouter(asyncRouterMap, roles);\n        commit('SET_ROUTERS', accessedRouters);\n        resolve();\n      });\n    }\n  }\n};\nexport default permission;",{"version":3,"sources":["D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\src\\store\\modules\\permission.js"],"names":["asyncRouterMap","constantRouterMap","hasPermission","permission","route","meta","flag","i","len","length","includes","hasRole","roles","id","filterAsyncRouter","routerMap","accessedRouters","filter","permissionList","children","state","routers","addRouters","mutations","SET_ROUTERS","concat","actions","GenerateRoutes","data","commit","resolve"],"mappings":";;;AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,wBAAlD;AAEA;;;;;;;;AAOA,SAASC,aAAT,CAAwBC,UAAxB,EAAoCC,KAApC,EAA2C;AACzC,MAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWF,UAA7B,EAAyC;AACvC,QAAIG,IAAI,GAAG,KAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGL,UAAU,CAACM,MAAjC,EAAyCF,CAAC,GAAGC,GAA7C,EAAkDD,CAAC,EAAnD,EAAuD;AACrDD,MAAAA,IAAI,GAAGF,KAAK,CAACC,IAAN,CAAWF,UAAX,CAAsBO,QAAtB,CAA+BP,UAAU,CAACI,CAAD,CAAzC,CAAP;;AACA,UAAID,IAAJ,EAAU;AACR,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD;AAED;;;;;;;AAOA;;;AACA,SAASK,OAAT,CAAiBC,KAAjB,EAAwBR,KAAxB,EAA+B;AAC7B,MAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWO,KAA7B,EAAoC;AAClC,WAAOR,KAAK,CAACC,IAAN,CAAWO,KAAX,CAAiBF,QAAjB,CAA0BE,KAAK,CAACC,EAAhC,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASC,iBAAT,CAA4BC,SAA5B,EAAuCH,KAAvC,EAA8C;AAC5C,MAAMI,eAAe,GAAGD,SAAS,CAACE,MAAV,CAAiB,UAAAb,KAAK,EAAI;AAChD,QAAIF,aAAa,CAACU,KAAK,CAACM,cAAP,EAAuBd,KAAvB,CAAjB,EAAgD;AAC9C,UAAIA,KAAK,CAACe,QAAN,IAAkBf,KAAK,CAACe,QAAN,CAAeV,MAArC,EAA6C;AAC3CL,QAAAA,KAAK,CAACe,QAAN,GAAiBL,iBAAiB,CAACV,KAAK,CAACe,QAAP,EAAiBP,KAAjB,CAAlC;AACD;;AACD,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GARuB,CAAxB;AASA,SAAOI,eAAP;AACD;;AAED,IAAMb,UAAU,GAAG;AACjBiB,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEpB,iBADJ;AAELqB,IAAAA,UAAU,EAAE;AAFP,GADU;AAKjBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE,qBAACJ,KAAD,EAAQC,OAAR,EAAoB;AAC/BD,MAAAA,KAAK,CAACE,UAAN,GAAmBD,OAAnB;AACAD,MAAAA,KAAK,CAACC,OAAN,GAAgBpB,iBAAiB,CAACwB,MAAlB,CAAyBJ,OAAzB,CAAhB;AACD;AAJQ,GALM;AAWjBK,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,gCACqBC,IADrB,EAC2B;AAAA,UAAhBC,MAAgB,QAAhBA,MAAgB;AAChC,aAAO,aAAY,UAAAC,OAAO,EAAI;AAAA,YACpBlB,KADoB,GACVgB,IADU,CACpBhB,KADoB;AAE5B,YAAMI,eAAe,GAAGF,iBAAiB,CAACd,cAAD,EAAiBY,KAAjB,CAAzC;AACAiB,QAAAA,MAAM,CAAC,aAAD,EAAgBb,eAAhB,CAAN;AACAc,QAAAA,OAAO;AACR,OALM,CAAP;AAMD;AARM;AAXQ,CAAnB;AAuBA,eAAe3B,UAAf","sourcesContent":["import { asyncRouterMap, constantRouterMap } from '@/config/router.config'\n\n/**\n * 过滤账户是否拥有某一个权限，并将菜单从加载列表移除\n *\n * @param permission\n * @param route\n * @returns {boolean}\n */\nfunction hasPermission (permission, route) {\n  if (route.meta && route.meta.permission) {\n    let flag = false\n    for (let i = 0, len = permission.length; i < len; i++) {\n      flag = route.meta.permission.includes(permission[i])\n      if (flag) {\n        return true\n      }\n    }\n    return false\n  }\n  return true\n}\n\n/**\n * 单账户多角色时，使用该方法可过滤角色不存在的菜单\n *\n * @param roles\n * @param route\n * @returns {*}\n */\n// eslint-disable-next-line\nfunction hasRole(roles, route) {\n  if (route.meta && route.meta.roles) {\n    return route.meta.roles.includes(roles.id)\n  } else {\n    return true\n  }\n}\n\nfunction filterAsyncRouter (routerMap, roles) {\n  const accessedRouters = routerMap.filter(route => {\n    if (hasPermission(roles.permissionList, route)) {\n      if (route.children && route.children.length) {\n        route.children = filterAsyncRouter(route.children, roles)\n      }\n      return true\n    }\n    return false\n  })\n  return accessedRouters\n}\n\nconst permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: []\n  },\n  mutations: {\n    SET_ROUTERS: (state, routers) => {\n      state.addRouters = routers\n      state.routers = constantRouterMap.concat(routers)\n    }\n  },\n  actions: {\n    GenerateRoutes ({ commit }, data) {\n      return new Promise(resolve => {\n        const { roles } = data\n        const accessedRouters = filterAsyncRouter(asyncRouterMap, roles)\n        commit('SET_ROUTERS', accessedRouters)\n        resolve()\n      })\n    }\n  }\n}\n\nexport default permission\n"]}]}