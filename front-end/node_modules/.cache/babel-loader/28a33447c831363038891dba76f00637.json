{"remainingRequest":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\babel-loader\\lib\\index.js!D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\src\\store\\modules\\user.js","mtime":1562869728000},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573722996621},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1573725483614}],"contextDependencies":[],"result":["import _Promise from \"D:\\\\Documents\\\\GitHub\\\\Psyche\\\\front-end\\\\db-front\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport { login, getInfo, logout } from '@/api/login';\nimport { ACCESS_TOKEN } from '@/store/mutation-types';\nimport { welcome } from '@/utils/util';\nexport var notiSource = null;\nvar user = {\n  state: {\n    token: '',\n    name: '',\n    welcome: '',\n    avatar: '',\n    roles: [],\n    info: {}\n  },\n  mutations: {\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_NAME: function SET_NAME(state, _ref) {\n      var name = _ref.name,\n          welcome = _ref.welcome;\n      state.name = name;\n      state.welcome = welcome;\n    },\n    SET_AVATAR: function SET_AVATAR(state, avatar) {\n      state.avatar = avatar;\n    },\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    },\n    SET_INFO: function SET_INFO(state, info) {\n      state.info = info;\n    }\n  },\n  actions: {\n    // 登录\n    Login: function Login(_ref2, userInfo) {\n      var commit = _ref2.commit;\n      return new _Promise(function (resolve, reject) {\n        login(userInfo).then(function (response) {\n          var result = response.result;\n          Vue.ls.set(ACCESS_TOKEN, result.token, 7 * 24 * 60 * 60 * 1000);\n          commit('SET_TOKEN', result.token);\n        }).then(function () {\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 获取用户信息\n    GetInfo: function GetInfo(_ref3) {\n      var commit = _ref3.commit;\n      return new _Promise(function (resolve, reject) {\n        getInfo().then(function (response) {\n          var result = response.result;\n\n          if (result.role && result.role.permissions.length > 0) {\n            var role = result.role;\n            role.permissions = result.role.permissions;\n            role.permissions.map(function (per) {\n              if (per.actionEntitySet != null && per.actionEntitySet.length > 0) {\n                var action = per.actionEntitySet.map(function (action) {\n                  return action.action;\n                });\n                per.actionList = action;\n              }\n            });\n            role.permissionList = role.permissions.map(function (permission) {\n              return permission.permissionId;\n            });\n            commit('SET_ROLES', result.role);\n            commit('SET_INFO', result);\n          } else {\n            reject(new Error('getInfo: roles must be a non-null array !'));\n          }\n\n          commit('SET_NAME', {\n            name: result.name,\n            welcome: welcome()\n          });\n          commit('SET_AVATAR', result.avatar);\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 登出\n    Logout: function Logout(_ref4) {\n      var commit = _ref4.commit,\n          state = _ref4.state;\n      return new _Promise(function (resolve) {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        Vue.ls.remove(ACCESS_TOKEN);\n        logout(state.token).then(function () {\n          resolve();\n        }).catch(function () {\n          resolve();\n        });\n      });\n    }\n  }\n};\nexport default user;",{"version":3,"sources":["D:\\Documents\\GitHub\\Psyche\\front-end\\db-front\\src\\store\\modules\\user.js"],"names":["Vue","login","getInfo","logout","ACCESS_TOKEN","welcome","notiSource","user","state","token","name","avatar","roles","info","mutations","SET_TOKEN","SET_NAME","SET_AVATAR","SET_ROLES","SET_INFO","actions","Login","userInfo","commit","resolve","reject","then","response","result","ls","set","catch","error","GetInfo","role","permissions","length","map","per","actionEntitySet","action","actionList","permissionList","permission","permissionId","Error","Logout","remove"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB,QAAuC,aAAvC;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,OAAO,IAAIC,UAAU,GAAG,IAAjB;AAEP,IAAMC,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,IAAI,EAAE,EAFD;AAGLL,IAAAA,OAAO,EAAE,EAHJ;AAILM,IAAAA,MAAM,EAAE,EAJH;AAKLC,IAAAA,KAAK,EAAE,EALF;AAMLC,IAAAA,IAAI,EAAE;AAND,GADI;AAUXC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,mBAACP,KAAD,EAAQC,KAAR,EAAkB;AAC3BD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD,KAHQ;AAITO,IAAAA,QAAQ,EAAE,kBAACR,KAAD,QAA8B;AAAA,UAApBE,IAAoB,QAApBA,IAAoB;AAAA,UAAdL,OAAc,QAAdA,OAAc;AACtCG,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACAF,MAAAA,KAAK,CAACH,OAAN,GAAgBA,OAAhB;AACD,KAPQ;AAQTY,IAAAA,UAAU,EAAE,oBAACT,KAAD,EAAQG,MAAR,EAAmB;AAC7BH,MAAAA,KAAK,CAACG,MAAN,GAAeA,MAAf;AACD,KAVQ;AAWTO,IAAAA,SAAS,EAAE,mBAACV,KAAD,EAAQI,KAAR,EAAkB;AAC3BJ,MAAAA,KAAK,CAACI,KAAN,GAAcA,KAAd;AACD,KAbQ;AAcTO,IAAAA,QAAQ,EAAE,kBAACX,KAAD,EAAQK,IAAR,EAAiB;AACzBL,MAAAA,KAAK,CAACK,IAAN,GAAaA,IAAb;AACD;AAhBQ,GAVA;AA6BXO,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,KAFO,wBAEWC,QAFX,EAEqB;AAAA,UAApBC,MAAoB,SAApBA,MAAoB;AAC1B,aAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCxB,QAAAA,KAAK,CAACqB,QAAD,CAAL,CACGI,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,cAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAxB;AACA5B,UAAAA,GAAG,CAAC6B,EAAJ,CAAOC,GAAP,CAAW1B,YAAX,EAAyBwB,MAAM,CAACnB,KAAhC,EAAuC,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IAA1D;AACAc,UAAAA,MAAM,CAAC,WAAD,EAAcK,MAAM,CAACnB,KAArB,CAAN;AACD,SALH,EAMGiB,IANH,CAMQ,YAAM;AACVF,UAAAA,OAAO;AACR,SARH,EASGO,KATH,CASS,UAAAC,KAAK,EAAI;AACdP,UAAAA,MAAM,CAACO,KAAD,CAAN;AACD,SAXH;AAYD,OAbM,CAAP;AAcD,KAjBM;AAmBP;AACAC,IAAAA,OApBO,0BAoBa;AAAA,UAAVV,MAAU,SAAVA,MAAU;AAClB,aAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCvB,QAAAA,OAAO,GAAGwB,IAAV,CAAe,UAAAC,QAAQ,EAAI;AACzB,cAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAxB;;AAEA,cAAIA,MAAM,CAACM,IAAP,IAAeN,MAAM,CAACM,IAAP,CAAYC,WAAZ,CAAwBC,MAAxB,GAAiC,CAApD,EAAuD;AACrD,gBAAMF,IAAI,GAAGN,MAAM,CAACM,IAApB;AACAA,YAAAA,IAAI,CAACC,WAAL,GAAmBP,MAAM,CAACM,IAAP,CAAYC,WAA/B;AACAD,YAAAA,IAAI,CAACC,WAAL,CAAiBE,GAAjB,CAAqB,UAAAC,GAAG,EAAI;AAC1B,kBAAIA,GAAG,CAACC,eAAJ,IAAuB,IAAvB,IAA+BD,GAAG,CAACC,eAAJ,CAAoBH,MAApB,GAA6B,CAAhE,EAAmE;AACjE,oBAAMI,MAAM,GAAGF,GAAG,CAACC,eAAJ,CAAoBF,GAApB,CAAwB,UAAAG,MAAM,EAAI;AAAE,yBAAOA,MAAM,CAACA,MAAd;AAAsB,iBAA1D,CAAf;AACAF,gBAAAA,GAAG,CAACG,UAAJ,GAAiBD,MAAjB;AACD;AACF,aALD;AAMAN,YAAAA,IAAI,CAACQ,cAAL,GAAsBR,IAAI,CAACC,WAAL,CAAiBE,GAAjB,CAAqB,UAAAM,UAAU,EAAI;AAAE,qBAAOA,UAAU,CAACC,YAAlB;AAAgC,aAArE,CAAtB;AACArB,YAAAA,MAAM,CAAC,WAAD,EAAcK,MAAM,CAACM,IAArB,CAAN;AACAX,YAAAA,MAAM,CAAC,UAAD,EAAaK,MAAb,CAAN;AACD,WAZD,MAYO;AACLH,YAAAA,MAAM,CAAC,IAAIoB,KAAJ,CAAU,2CAAV,CAAD,CAAN;AACD;;AAEDtB,UAAAA,MAAM,CAAC,UAAD,EAAa;AAAEb,YAAAA,IAAI,EAAEkB,MAAM,CAAClB,IAAf;AAAqBL,YAAAA,OAAO,EAAEA,OAAO;AAArC,WAAb,CAAN;AACAkB,UAAAA,MAAM,CAAC,YAAD,EAAeK,MAAM,CAACjB,MAAtB,CAAN;AAEAa,UAAAA,OAAO,CAACG,QAAD,CAAP;AACD,SAvBD,EAuBGI,KAvBH,CAuBS,UAAAC,KAAK,EAAI;AAChBP,UAAAA,MAAM,CAACO,KAAD,CAAN;AACD,SAzBD;AA0BD,OA3BM,CAAP;AA4BD,KAjDM;AAmDP;AACAc,IAAAA,MApDO,yBAoDmB;AAAA,UAAjBvB,MAAiB,SAAjBA,MAAiB;AAAA,UAATf,KAAS,SAATA,KAAS;AACxB,aAAO,aAAY,UAACgB,OAAD,EAAa;AAC9BD,QAAAA,MAAM,CAAC,WAAD,EAAc,EAAd,CAAN;AACAA,QAAAA,MAAM,CAAC,WAAD,EAAc,EAAd,CAAN;AACAvB,QAAAA,GAAG,CAAC6B,EAAJ,CAAOkB,MAAP,CAAc3C,YAAd;AAEAD,QAAAA,MAAM,CAACK,KAAK,CAACC,KAAP,CAAN,CAAoBiB,IAApB,CAAyB,YAAM;AAC7BF,UAAAA,OAAO;AACR,SAFD,EAEGO,KAFH,CAES,YAAM;AACbP,UAAAA,OAAO;AACR,SAJD;AAKD,OAVM,CAAP;AAWD;AAhEM;AA7BE,CAAb;AAkGA,eAAejB,IAAf","sourcesContent":["import Vue from 'vue'\nimport { login, getInfo, logout } from '@/api/login'\nimport { ACCESS_TOKEN } from '@/store/mutation-types'\nimport { welcome } from '@/utils/util'\n\nexport var notiSource = null\n\nconst user = {\n  state: {\n    token: '',\n    name: '',\n    welcome: '',\n    avatar: '',\n    roles: [],\n    info: {}\n  },\n\n  mutations: {\n    SET_TOKEN: (state, token) => {\n      state.token = token\n    },\n    SET_NAME: (state, { name, welcome }) => {\n      state.name = name\n      state.welcome = welcome\n    },\n    SET_AVATAR: (state, avatar) => {\n      state.avatar = avatar\n    },\n    SET_ROLES: (state, roles) => {\n      state.roles = roles\n    },\n    SET_INFO: (state, info) => {\n      state.info = info\n    }\n  },\n\n  actions: {\n    // 登录\n    Login({ commit }, userInfo) {\n      return new Promise((resolve, reject) => {\n        login(userInfo)\n          .then(response => {\n            const result = response.result\n            Vue.ls.set(ACCESS_TOKEN, result.token, 7 * 24 * 60 * 60 * 1000)\n            commit('SET_TOKEN', result.token)\n          })\n          .then(() => {\n            resolve()\n          })\n          .catch(error => {\n            reject(error)\n          })\n      })\n    },\n\n    // 获取用户信息\n    GetInfo({ commit }) {\n      return new Promise((resolve, reject) => {\n        getInfo().then(response => {\n          const result = response.result\n\n          if (result.role && result.role.permissions.length > 0) {\n            const role = result.role\n            role.permissions = result.role.permissions\n            role.permissions.map(per => {\n              if (per.actionEntitySet != null && per.actionEntitySet.length > 0) {\n                const action = per.actionEntitySet.map(action => { return action.action })\n                per.actionList = action\n              }\n            })\n            role.permissionList = role.permissions.map(permission => { return permission.permissionId })\n            commit('SET_ROLES', result.role)\n            commit('SET_INFO', result)\n          } else {\n            reject(new Error('getInfo: roles must be a non-null array !'))\n          }\n\n          commit('SET_NAME', { name: result.name, welcome: welcome() })\n          commit('SET_AVATAR', result.avatar)\n\n          resolve(response)\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n\n    // 登出\n    Logout({ commit, state }) {\n      return new Promise((resolve) => {\n        commit('SET_TOKEN', '')\n        commit('SET_ROLES', [])\n        Vue.ls.remove(ACCESS_TOKEN)\n\n        logout(state.token).then(() => {\n          resolve()\n        }).catch(() => {\n          resolve()\n        })\n      })\n    }\n\n  }\n}\n\nexport default user\n"]}]}